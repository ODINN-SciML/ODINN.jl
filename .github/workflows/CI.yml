name: Run Tests
on:
   pull_request:
    branches: []
   push:
    branches: []
    tags: '*'
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    defaults:
       run:
         shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
        python: [3.9]
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 🐍 ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}  
#       - name: Create environment with micromamba 🐍🖤
#         uses: mamba-org/setup-micromamba@v1
#         with: 
#           micromamba-version: '1.5.6-0'
#           environment-file: ./environment.yml
#           environment-name: oggm_env                # it is recommendable to add both name and yml file. 
#           init-shell: bash
#           cache-environment: true
# #           condarc-file: ./condarc.yml                # If necessary, we can include .condarc to configure environment
#       - name: Test creation of environment with micromamba 🔧🐍🖤
#         run: | 
#             which python
#             conda env export
#         shell: bash -el {0}
#       - name: Update certifi 🔒🔑
#         run: | 
#             pip install --upgrade certifi
#         shell: bash -el {0}
# #       - name: Test OGGM installation 🔧🌎 
# #         run: pytest.oggm
# #         shell: bash -el {0}
#       - name: Set ENV Variables for PyCall.jl 🐍 📞
#         run: export PYTHON=/home/runner/micromamba/envs/oggm_env/bin/python
#         shell: bash -el {0}
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - name: Check Julia SSL certifications 🔎🔐
        run: julia -e 'using NetworkOptions; println(NetworkOptions.bundled_ca_roots()); println(NetworkOptions.ca_roots())'
        shell: bash -el {0}
      - uses: julia-actions/cache@v1
        with:
          cache-registries: "true"
          cache-compiled: "true"
      - uses: julia-actions/julia-buildpkg@v1
        env:
          PYTHON : /home/runner/micromamba/envs/oggm_env/bin/python
          # The SSL certificate path can be readed from the action "Check Julia SSL certifications"
          SSL_CERT_FILE: /etc/ssl/certs/ca-certificates.crt
      - uses: julia-actions/julia-runtest@v1
        env:
          PYTHON : /home/runner/micromamba/envs/oggm_env/bin/python
          SSL_CERT_FILE: /etc/ssl/certs/ca-certificates.crt
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: lcov.info
